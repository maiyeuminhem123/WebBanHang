@model IEnumerable<Bai3_WebBanHang.Models.Order>

@{
    ViewData["Title"] = "Quản Lý Đơn Hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<style>
    /* Thêm một lớp CSS nhỏ để đảm bảo các nút hành động trên cùng một dòng và có khoảng cách */
    .action-buttons {
        display: flex;
        gap: 0.5rem; /* Tạo khoảng cách giữa các nút */
    }

    /* Căn giữa nội dung trong các ô của bảng theo chiều dọc */
    .table td, .table th {
        vertical-align: middle;
    }
</style>

<div class="container-fluid mt-4">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-light py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0 text-primary">
                    <i class="fas fa-clipboard-list me-2"></i>@ViewData["Title"]
                </h3>
            </div>
        </div>

        <div class="card-body">
            <div id="notification-area" class="mb-3"></div>

            <form id="deleteForm" method="post" asp-action="DeleteSelected">
                <div class="mb-3">
                    <button type="submit" class="btn btn-danger" id="deleteSelected" disabled>
                        <i class="fas fa-trash-alt me-1"></i> Xóa Mục Đã Chọn
                    </button>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 5%;"><input type="checkbox" id="selectAll"></th>
                                <th>Mã Đơn Hàng</th>
                                <th>Khách Hàng</th>
                                <th>Ngày Đặt</th>
                                <th>Tổng Tiền</th>
                                <th>Trạng Thái</th>
                                <th class="text-center">Hành Động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="7" class="text-center text-muted py-4">
                                        <i class="fas fa-info-circle me-2"></i>Không có đơn hàng nào.
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var order in Model)
                                {
                                    <tr>
                                        <td><input type="checkbox" name="ids" value="@order.Id" class="select-item"></td>
                                        <td><span class="fw-bold">@order.OrderCode</span></td>
                                        <td>@order.CustomerName</td>
                                        <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td class="fw-bold">@order.TotalAmount.ToString("N0") ₫</td>
                                        <td>
                                            <span class="badge rounded-pill @(order.OrderStatus == "Pending" ? "bg-warning text-dark" : order.OrderStatus == "Confirmed" ? "bg-primary" : order.OrderStatus == "Shipping" ? "bg-info text-dark" : order.OrderStatus == "Delivered" ? "bg-success" : order.OrderStatus == "Cancelled" ? "bg-danger" : "bg-secondary")">
                                                @(ViewBag.StatusDisplayNames != null && order.OrderStatus != null && ViewBag.StatusDisplayNames.ContainsKey(order.OrderStatus) ? ViewBag.StatusDisplayNames[order.OrderStatus] : order.OrderStatus ?? "Chưa xác định")
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <div class="action-buttons justify-content-center">
                                                <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary" title="Xem Chi Tiết">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <button class="btn btn-sm btn-outline-danger delete-btn" data-id="@order.Id" title="Xóa Đơn Hàng">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                @{
                    var page = ViewBag.Page;
                    var pageSize = ViewBag.PageSize;
                    var totalPages = ViewBag.TotalPages;
                }
                @if (totalPages > 1)
                {
                    <nav aria-label="Page navigation" class="mt-4 d-flex justify-content-end">
                        <ul class="pagination">
                            <li class="page-item @(page == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(page - 1)" asp-route-pageSize="@pageSize">
                                    <span>&laquo;</span>
                                </a>
                            </li>
                            @for (var i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == page ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@pageSize">@i</a>
                                </li>
                            }
                            <li class="page-item @(page == totalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(page + 1)" asp-route-pageSize="@pageSize">
                                    <span>&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @Html.AntiForgeryToken()
    <script>
        $(document).ready(function () {
            // Select/Deselect All
            $('#selectAll').on('change', function () {
                $('.select-item').prop('checked', this.checked);
                toggleDeleteButton();
            });

            $('.select-item').on('change', function() {
                if ($('.select-item:checked').length == $('.select-item').length) {
                    $('#selectAll').prop('checked', true);
                } else {
                    $('#selectAll').prop('checked', false);
                }
                toggleDeleteButton();
            });

            function toggleDeleteButton() {
                $('#deleteSelected').prop('disabled', !$('.select-item:checked').length);
            }

            // Single Delete
            $('.delete-btn').on('click', function () {
                const id = $(this).data('id');
                if (confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')) {
                    deleteOrder(id);
                }
            });

            // Multi-delete form submission
            $('#deleteForm').on('submit', function (e) {
                e.preventDefault();
                if (confirm('Bạn có chắc chắn muốn xóa các đơn hàng đã chọn?')) {
                    const ids = $('.select-item:checked').map(function () {
                        return $(this).val();
                    }).get();
                    if(ids.length > 0) {
                        deleteSelectedOrders(ids);
                    }
                }
            });

            // AJAX function for single delete
            function deleteOrder(id) {
                $.ajax({
                    url: '@Url.Action("Delete", "Order", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        id: id,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    beforeSend: function () {
                        $('body').append('<div class="loading-overlay"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
                    },
                    success: function (response) {
                        showNotification(response.message, response.success ? 'success' : 'danger');
                        if (response.success) {
                            $(`input[value="${id}"]`).closest('tr').fadeOut(500, function() { $(this).remove(); });
                            toggleDeleteButton();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', xhr, status, error);
                        showNotification('Đã có lỗi xảy ra. Vui lòng thử lại.', 'danger');
                    },
                    complete: function () {
                        $('.loading-overlay').remove();
                    }
                });
            }

            // AJAX function for multi-delete
            function deleteSelectedOrders(ids) {
                $.ajax({
                    url: '@Url.Action("DeleteSelected", "Order", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        ids: ids,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    traditional: true, // Important for sending arrays to MVC
                    beforeSend: function () {
                        $('body').append('<div class="loading-overlay"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
                    },
                    success: function (response) {
                        showNotification(response.message, response.success ? 'success' : 'danger');
                        if (response.success) {
                            ids.forEach(id => {
                                $(`input[value="${id}"]`).closest('tr').fadeOut(500, function() { $(this).remove(); });
                            });
                            toggleDeleteButton();
                            $('#selectAll').prop('checked', false);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', xhr, status, error);
                        showNotification('Đã có lỗi xảy ra. Vui lòng thử lại.', 'danger');
                    },
                    complete: function () {
                        $('.loading-overlay').remove();
                    }
                });
            }

            // Notification display function
            function showNotification(message, type) {
                const alertHtml = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`;
                $('#notification-area').html(alertHtml);
                setTimeout(() => {
                    $('.alert').fadeOut(500, function() { $(this).remove(); });
                }, 3000);
            }
        });
    </script>
}